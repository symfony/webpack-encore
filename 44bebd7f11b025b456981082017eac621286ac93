---------------------------------------------------------------------------

by stof at 2021-04-23T11:17:44Z

For fixing the tests, I went the lazy way for finding the version of webpack that changed the naming of chunks, and I made 5.35 (the current version) the min version. I know that 5.25 is still using the old naming of the split chunk.

Due to the way yarn and npm work, supporting a wide range of versions for `dependencies` is not useful, as yarn and npm will use the latest version anyway (happily installing multiple versions of the package in different parts of the tree if needed). The place where supporting wider ranges is useful is for `peerDependencies`.

---------------------------------------------------------------------------

by stof at 2021-04-23T11:21:53Z

ok, apparently, it is not webpack itself changing the naming of chunks, but probably a plugin...

---------------------------------------------------------------------------

by stof at 2021-04-23T12:01:36Z

@weaverryan how do you generally fix this issue about the generated chunk ids being different for the lowest deps job ?

---------------------------------------------------------------------------

by weaverryan at 2021-04-27T12:42:38Z

> @weaverryan how do you generally fix this issue about the generated chunk ids being different for the lowest deps job ?

I have been, on a case-by-case basis, making our test suite able to be "smarter" by matching in a fuzzy way. For example: https://github.com/symfony/webpack-encore/blob/d0741010efcd47212bc632bb8ffa2021e5c724a5/test/functional.js#L444

Outside of this PR, we just need to find the new problems and make them fuzzy like this :)

---------------------------------------------------------------------------

by stof at 2021-04-27T12:44:44Z

@weaverryan the issue is the test about splitting entry points in production mode. there, the file names are integers generated by webpack, and they depend on a bunch of things

---------------------------------------------------------------------------

by weaverryan at 2021-04-27T13:00:22Z

> @weaverryan the issue is the test about splitting entry points in production mode. there, the file names are integers generated by webpack, and they depend on a bunch of things

üëç So, for reference, this line causes problems:

```
js: ['/build/runtime.js', '/build/961.js', '/build/38.js', '/build/main.js'],
```

Matching the 2 integers in a "fuzzy" way would be a little odd... just because they could be anything. The test would be reduced to:

* Check that there are 4 .js files
* And that 2 of them are runtime.js and main.js... but the other 2 could be anything

It makes me think it would be easier just to rewrite the test. Instead of asserting the entire entrypoints.json contents, we would check specifically for the two items above (check for 4 files, and that two of them are runtime.js and main.js).

For the `webpackAssert.assertManifestKeyExists('build/843.js');` check, probably we could loop through all of the `main` keys in the `entrypoints.json` file, and assert that they exist (without the opening slash) in `manifest.json`.

---------------------------------------------------------------------------

by stof at 2021-04-28T07:42:58Z

@weaverryan any chance that you do the refactoring of this test, as you know better than me the architecture of the testsuite ?

---------------------------------------------------------------------------

by weaverryan at 2021-04-28T17:49:58Z

No problem - I was thinking already about doing that - I pushed a commit that should hopefully do the trick :)

---------------------------------------------------------------------------

by stof at 2021-04-28T18:07:33Z

Looks like the `enableIntegrityHashes()` now breaks in the `highest deps` job (which was not the case last week).

---------------------------------------------------------------------------

by weaverryan at 2021-04-28T18:21:26Z

I noticed that too :/ - I'll take a look at it in a separate PR - the cause is not immediately obvious
